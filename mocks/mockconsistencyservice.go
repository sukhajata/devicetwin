// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/sukhajata/devicetwin.git/internal/consistency (interfaces: ConsistencyChecker)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	types "github.com/sukhajata/devicetwin.git/internal/types"
	config "github.com/sukhajata/ppconfig"
	ppdownlink "github.com/sukhajata/ppmessage/ppdownlink"
	reflect "reflect"
)

// MockConsistencyChecker is a mock of ConsistencyChecker interface
type MockConsistencyChecker struct {
	ctrl     *gomock.Controller
	recorder *MockConsistencyCheckerMockRecorder
}

// MockConsistencyCheckerMockRecorder is the mock recorder for MockConsistencyChecker
type MockConsistencyCheckerMockRecorder struct {
	mock *MockConsistencyChecker
}

// NewMockConsistencyChecker creates a new mock instance
func NewMockConsistencyChecker(ctrl *gomock.Controller) *MockConsistencyChecker {
	mock := &MockConsistencyChecker{ctrl: ctrl}
	mock.recorder = &MockConsistencyCheckerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockConsistencyChecker) EXPECT() *MockConsistencyCheckerMockRecorder {
	return m.recorder
}

// CheckConsistencyAllFieldsForDevice mocks base method
func (m *MockConsistencyChecker) CheckConsistencyAllFieldsForDevice(arg0 *config.Identifier) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "CheckConsistencyAllFieldsForDevice", arg0)
}

// CheckConsistencyAllFieldsForDevice indicates an expected call of CheckConsistencyAllFieldsForDevice
func (mr *MockConsistencyCheckerMockRecorder) CheckConsistencyAllFieldsForDevice(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckConsistencyAllFieldsForDevice", reflect.TypeOf((*MockConsistencyChecker)(nil).CheckConsistencyAllFieldsForDevice), arg0)
}

// CheckConsistencyForField mocks base method
func (m *MockConsistencyChecker) CheckConsistencyForField(arg0 *config.ConfigField, arg1 string, arg2 *config.Identifier) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckConsistencyForField", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// CheckConsistencyForField indicates an expected call of CheckConsistencyForField
func (mr *MockConsistencyCheckerMockRecorder) CheckConsistencyForField(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckConsistencyForField", reflect.TypeOf((*MockConsistencyChecker)(nil).CheckConsistencyForField), arg0, arg1, arg2)
}

// ProcessCheckConsistencyRequest mocks base method
func (m *MockConsistencyChecker) ProcessCheckConsistencyRequest(arg0 *config.CheckConsistencyRequest) (*config.Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ProcessCheckConsistencyRequest", arg0)
	ret0, _ := ret[0].(*config.Response)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ProcessCheckConsistencyRequest indicates an expected call of ProcessCheckConsistencyRequest
func (mr *MockConsistencyCheckerMockRecorder) ProcessCheckConsistencyRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ProcessCheckConsistencyRequest", reflect.TypeOf((*MockConsistencyChecker)(nil).ProcessCheckConsistencyRequest), arg0)
}

// RunScheduledConsistencyCheck mocks base method
func (m *MockConsistencyChecker) RunScheduledConsistencyCheck() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "RunScheduledConsistencyCheck")
}

// RunScheduledConsistencyCheck indicates an expected call of RunScheduledConsistencyCheck
func (mr *MockConsistencyCheckerMockRecorder) RunScheduledConsistencyCheck() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RunScheduledConsistencyCheck", reflect.TypeOf((*MockConsistencyChecker)(nil).RunScheduledConsistencyCheck))
}

// ScheduleConsistencyCheckForField mocks base method
func (m *MockConsistencyChecker) ScheduleConsistencyCheckForField(arg0 *config.Identifier, arg1 types.ConfigFieldDetails, arg2 string, arg3 int32) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "ScheduleConsistencyCheckForField", arg0, arg1, arg2, arg3)
}

// ScheduleConsistencyCheckForField indicates an expected call of ScheduleConsistencyCheckForField
func (mr *MockConsistencyCheckerMockRecorder) ScheduleConsistencyCheckForField(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ScheduleConsistencyCheckForField", reflect.TypeOf((*MockConsistencyChecker)(nil).ScheduleConsistencyCheckForField), arg0, arg1, arg2, arg3)
}

// ScheduleMessageSend mocks base method
func (m *MockConsistencyChecker) ScheduleMessageSend(arg0 string, arg1 *ppdownlink.ConfigDownlinkMessage) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "ScheduleMessageSend", arg0, arg1)
}

// ScheduleMessageSend indicates an expected call of ScheduleMessageSend
func (mr *MockConsistencyCheckerMockRecorder) ScheduleMessageSend(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ScheduleMessageSend", reflect.TypeOf((*MockConsistencyChecker)(nil).ScheduleMessageSend), arg0, arg1)
}
